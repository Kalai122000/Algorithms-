import java.util.*;
import java.util.regex.*;

public class Main {
    
    private static char binaryToHex(String s) {
        if(s.equals("0000")) {
            return '0';
        } else if(s.equals("0001")) {
            return '1';
        } else if(s.equals("0010")) {
            return '2';
        } else if(s.equals("0011")) {
            return '3';
        } else if(s.equals("0100")) {
            return '4';
        } else if(s.equals("0101")) {
            return '5';
        } else if(s.equals("0110")) {
            return '6';
        } else if(s.equals("0111")) {
            return '7';
        } else if(s.equals("1000")) {
            return '8';
        } else if(s.equals("1001")) {
            return '9';
        } else if(s.equals("1010")) {
            return 'A';
        } else if(s.equals("1011")) {
            return 'B';
        } else if(s.equals("1100")) {
            return 'C';
        } else if(s.equals("1101")) {
            return 'D';
        } else if(s.equals("1110")) {
            return 'E';
        } else {
            return 'F';
        }
    }
    
    private static String hexToBinary(char c) {
        c = Character.toUpperCase(c);
        switch(c) {
            case '0': return "0000";
            case '1': return "0001";
            case '2': return "0010";
            case '3': return "0011";
            case '4': return "0100";
            case '5': return "0101";
            case '6': return "0110";
            case '7': return "0111";
            case '8': return "1000";
            case '9': return "1001";
            case 'A': return "1010";
            case 'B': return "1011";
            case 'C': return "1100";
            case 'D': return "1101";
            case 'E': return "1110";
            default: return "1111";
        }
    }
    
    private static void outputAnswer(String s) {
        System.out.println(s.replaceAll("^0+(?!$)", ""));
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int Q = scanner.nextInt();
        
        while(Q > 0) {
            int k = scanner.nextInt();
            String aHex = scanner.next();
            String bHex = scanner.next();
            String cHex = scanner.next();
            
            StringBuilder A = new StringBuilder();
            StringBuilder B = new StringBuilder();
            StringBuilder C = new StringBuilder();

            for(int i = 0; i < aHex.length(); i++) {
                A.append(hexToBinary(aHex.charAt(i)));
            }
            for(int i = 0; i < bHex.length(); i++) {
                B.append(hexToBinary(bHex.charAt(i)));
            }
            for(int i = 0; i < cHex.length(); i++) {
                C.append(hexToBinary(cHex.charAt(i)));
            }
          
            int longestString = Math.max(A.length(), Math.max(B.length(), C.length()));
            
            while(A.length() < longestString) {
                A.insert(0, '0');
            }
            while(B.length() < longestString) {
                B.insert(0, '0');
            }
            while(C.length() < longestString) {
                C.insert(0, '0');
            }

            char[] aBits = A.toString().toCharArray();
            char[] bBits = B.toString().toCharArray();
            char[] cBits = C.toString().toCharArray();

            for(int i = 0; i < aBits.length; i++) {
                if(cBits[i] == '0') {
                    if(aBits[i] != '0') {
                        aBits[i] = '0';
                        k--;
                    }
                    if(bBits[i] != '0') {
                        bBits[i] = '0';
                        k--;
                    }
                } else {
                    if(aBits[i] == '0' && bBits[i] == '0') {
                        bBits[i] = '1';
                        k--;
                    }
                }
            }
            
            if(k < 0) {
                System.out.println("-1");
                Q--;
                continue;
            }
            for(int i = 0; i < aBits.length; i++) {
                if(k == 0) {
                    break;
                }
                if(cBits[i] == '1' && aBits[i] == '1') {
                    if(k > 1 && bBits[i] == '0') {
                        aBits[i] = '0';
                        bBits[i] = '1';
                        k -= 2;
                    } else if(bBits[i] == '1') {
                        aBits[i] = '0';
                        k--;
                    }
                }
            }
            StringBuilder answerA = new StringBuilder();
            StringBuilder answerB = new StringBuilder();
            
            String aStr = new String(aBits);
            String bStr = new String(bBits);
            
            for(int i = 0; i <= aStr.length()-4; i+=4) {
                answerA.append(binaryToHex(aStr.substring(i, i+4)));
                answerB.append(binaryToHex(bStr.substring(i, i+4)));
            }
            
            outputAnswer(answerA.toString());
            outputAnswer(answerB.toString());
            Q--;
        }
        scanner.close();
    }
}
